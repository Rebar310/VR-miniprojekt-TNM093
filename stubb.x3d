<?xml version="1.0" encoding="UTF-8"?>
<!--

Copyright 2013, 2017, Karljohan Lundin Palmerius

This is a stubb for laborations on multi-modal display
systems in the VR laboratory. It will disable the X3D
navigation to allow for viewpoint calibration and tracking,
and load libraries commonly used in the VR laboratory.

-->
<Group> 

  
  <PythonScript url="urn:candy:python/CorrectViewpoint.py"/>
  <PythonScript url="urn:candy:python/AutoLoadSO.py"/>
<!-- ......................................................................-->
  <!-- Part 2 view setup — use one at a time; works in VR lab -->

  <!-- Untracked STEREO (stereopsis without tracking) -->
  <!--<Inline url="urn:candy:x3d/view-untracked-stereo.x3d"/> -->

  <!-- Untracked MONO (baseline)(bra för att testa skugg-effekten på vanlig skärm) -->
   Inline url="urn:candy:x3d/view-untracked-mono.x3d"

  <!-- <Inline url="urn:candy:x3d/view-head-tracked-stereo.x3d"/> -->
  <!-- <Inline url="urn:candy:x3d/view-head-tracked-mono.x3d"/> -->
   
  <!-- ........................................................................-->

 <!-- Viewpoints 
  <Viewpoint description="From the front"
             position="0 0 0.6"
             orientation="0 1 0 0"/>
  <Viewpoint description="Acute angle"
             position="0.3 0.2 0.6"
             orientation="0 1 0 0.5" />  fieldOfView="2"-->

             <!-- Off-axis viewpoint -->

<!--
<SMViewpoint description="Off-axis front"
             position="0 0 2.0"
             screenLowerLeft="-0.305 -0.175 0"
             screenUpperRight="0.305 0.175 0"
             screenUp="0 1 0"/>

<SMViewpoint description="Off-axis acute"
             position="2.0 0.2 0.6"
             screenLowerLeft="-0.305 -0.175 0"
             screenUpperRight="0.305 0.175 0"
             screenUp="0 1 0"/>
-->

<!-- ..............................................................................-->

  <!--<Transform translation="0 0.1 0">  Om vi vill flytta stolen bakåt i bild, men ej nödvändigt för tasks-->

  <!--PART 2- SHADOWS: adding a point light source-->
  <!--Turn off camera headlight so point light dominates (optional)-->
  <NavigationInfo type='"EXAMINE" "ANY"' headlight="false"/>

  <!-- Task 7: Point light above and slightly in front -->
  <Transform translation="-0.3 0.9 0.9">
    <PointLight color="1 1 1" intensity="1.2" radius="10" attenuation="1 0.15 0.02"/>
  </Transform>
 
  <!-- Ground receiver - Task 7-->
  <Transform translation="0 -0.35 0">
    <Shape>
      <Appearance>
      <Material diffuseColor="0.6 0.6 0.6"/>
       <!-- Task 8 (texture):  2x2 checker packed as 4 integers -->
      <PixelTexture DEF="CheckerTex" repeatS="true" repeatT="true"
                    image="2 2 3 5921375 4605515 4605515 5921375"/>
      <TextureTransform scale="20 20"/>
      </Appearance>
      <Box size="3 0.02 3"/>
    </Shape>
  </Transform>

  <!-- Back wall receiver - Task 7-->
  <Transform translation="0 0 -1.0">
    <Shape>
      <Appearance>
      <Material diffuseColor="0.55 0.55 0.6"/>
      <PixelTexture USE="CheckerTex"/>
      <!-- Task 8 (texture): fewer tiles on the wall so pattern isn’t too fine -->
      <TextureTransform scale="12 12"/>
      </Appearance>
      <Box size="3 2 0.02"/>
    </Shape>
  </Transform>

  <!-- Test caster (sphere) to make the shadow shape obvious -->
  <Transform translation="0.15 0.05 0.0">
    <Shape>
      <Appearance shadow="true"><Material diffuseColor="0.9 0.2 0.2"/></Appearance>
      <Sphere radius="0.05"/>
    </Shape>
  </Transform>


  <MatrixTransform DEF="Chair"> <!-- Gemensamm Transform så vi kan manipulera stolen-->

  <Transform scale="0.2 0.2 0.2">
    <!-- Seat : Shadow true to make each part of the chair cast shadow-->
    <Transform translation="0 0 0">
      <Shape>
        <Appearance shadow="true"><Material diffuseColor="0.8 1.0 0.3"/></Appearance>
        <Box size="0.5 0.05 0.5"/>
      </Shape>
    </Transform>

    <!-- Backrest -->
    <Transform translation="0 0.27 -0.23">
      <Shape>
        <Appearance shadow="true"><Material diffuseColor="0.8 0.9 0.3"/></Appearance>
        <Box size="0.5 0.5 0.05"/>
      </Shape>
    </Transform>

    <!-- Leg 1 (defines the geometry here, so it also renders here) -->
    <Transform translation=" 0.2 -0.25  0.2">
      <Shape DEF="LegShape">
        <Appearance shadow="true"><Material diffuseColor="0.4 0.3 0.2"/></Appearance>
        <Box size="0.05 0.5 0.05"/>
      </Shape>
    </Transform>

    <!-- Legs 2–4 reuse the geometry -->
    <Transform translation="-0.2 -0.25  0.2"><Shape USE="LegShape"/></Transform>
    <Transform translation=" 0.2 -0.25 -0.2"><Shape USE="LegShape"/></Transform>
    <Transform translation="-0.2 -0.25 -0.2"><Shape USE="LegShape"/></Transform>

</Transform>
  </MatrixTransform>

<!-- Navigation -->

<IMPORT inlineDEF="H3D_EXPORTS" exportedDEF="HDEV" AS="HDEV"/>

<PythonScript DEF="MT" url="urn:candy:python/ManualTranslation.py">
      <Transform USE="Chair" containerField="references"/>
    </PythonScript>

    <PythonScript DEF="MR" url="urn:candy:python/ManualRotation.py">
      <Transform USE="Chair" containerField="references"/>
    </PythonScript>

<ROUTE fromNode="HDEV" fromField="mainButton"
         toNode="MT" toField="button"/>
  <ROUTE fromNode="HDEV" fromField="trackerPosition"
         toNode="MT" toField="position"/>
  
  <ROUTE fromNode="HDEV" fromField="mainButton"
         toNode="MZ" toField="button"/>
  <ROUTE fromNode="HDEV" fromField="trackerPosition"
         toNode="MZ" toField="position"/>
  <ROUTE fromNode="HDEV" fromField="trackerOrientation"
         toNode="MZ" toField="orientation"/>
  
  <ROUTE fromNode="HDEV" fromField="mainButton"
         toNode="MR" toField="button"/>
  <ROUTE fromNode="HDEV" fromField="trackerPosition"
         toNode="MR" toField="position"/>
  <ROUTE fromNode="HDEV" fromField="trackerOrientation"
         toNode="MR" toField="orientation"/>

  <!-- ======================= -->
  <!-- ADDED FOR TASK 11 START -->
  <!-- ======================= -->

  <!-- (1) Lägg till saknad MZ-nod (dina befintliga ROUTEs kräver den) -->
  <PythonScript DEF="MZ" url="urn:candy:python/ManualZoom.py">
    <Transform USE="Chair" containerField="references"/>
  </PythonScript>

  <!-- (2) Ladda ljudklipp (mono WAV) -->
  <AudioClip DEF="ClipSphere" url='"ping.wav"' loop="false"/>
  <AudioClip DEF="ClipChair"  url='"chair.wav"' loop="false"/>

  <!-- (3) Spatialiserade ljudkällor (placeras nära dina befintliga objekt)
         Obs: jag lägger INTE in dem i dina gamla Transform-block, utan som egna noder,
         så ingen av dina rader ändras eller tas bort. -->

  <!-- Ljud vid sfären (din sfär ligger på 0.15 0.05 0.0) -->
  <Transform translation="0.15 0.05 0.0">
    <VRSound DEF="SND_Sphere" location="0 0 0">
      <AudioClip USE="ClipSphere"/>
    </VRSound>
  </Transform>

  <!-- Ljud vid stolen (nära sitsens höjd i världens origo) -->
  <Transform translation="0 0.15 0">
    <VRSound DEF="SND_Chair" location="0 0 0">
      <AudioClip USE="ClipChair"/>
    </VRSound>
  </Transform>

  <!-- (4) Touch → tidstrigger med en separat, *osynlig* touch-geometri
         så vi slipper ändra dina befintliga Shape/Geometry-rader. -->

  <!-- Sfärens touch-proxy: liten transparent box vid sfärens position -->
  <Transform translation="0.15 0.05 0.0">
    <Shape>
      <Appearance>
        <Material transparency="1.0"/>
      </Appearance>
      <Box DEF="SphereTouchGeom" size="0.08 0.08 0.08"/>
    </Shape>
  </Transform>

  <!-- Stolens touch-proxy: liten transparent box vid första benets position -->
  <Transform translation="0.2 -0.25 0.2">
    <Shape>
      <Appearance>
        <Material transparency="1.0"/>
      </Appearance>
      <Box DEF="ChairTouchGeom" size="0.06 0.5 0.06"/>
    </Shape>
  </Transform>

  <!-- (5) Any-true (MFBool->SFBool), filter & tidstrigger -->
  <Script DEF="AnyTouch_Sphere">
    <field name="isTouched" accessType="inputOnly" type="MFBool"/>
    <field name="touched"   accessType="outputOnly" type="SFBool"/>
    <![CDATA[
      ecmascript:
      function isTouched(v) {
        var any = false;
        for (var i=0; i<v.length; i++) if (v[i]) { any = true; break; }
        touched = any;
      }
    ]]>
  </Script>

  <Script DEF="AnyTouch_Chair">
    <field name="isTouched" accessType="inputOnly" type="MFBool"/>
    <field name="touched"   accessType="outputOnly" type="SFBool"/>
    <![CDATA[
      ecmascript:
      function isTouched(v) {
        var any = false;
        for (var i=0; i<v.length; i++) if (v[i]) { any = true; break; }
        touched = any;
      }
    ]]>
  </Script>

  <BooleanFilter DEF="BF_Sphere"/>
  <BooleanFilter DEF="BF_Chair"/>

  <TimeTrigger DEF="TT_Sphere"/>
  <TimeTrigger DEF="TT_Chair"/>

  <!-- (6) ROUTEs: proxy-geometry.isTouched -> AnyTouch -> Filter -> TimeTrigger -> AudioClip.startTime -->

  <!-- Sfär -->
  <ROUTE fromNode="SphereTouchGeom" fromField="isTouched"   toNode="AnyTouch_Sphere" toField="isTouched"/>
  <ROUTE fromNode="AnyTouch_Sphere" fromField="touched"     toNode="BF_Sphere"       toField="set_boolean"/>
  <ROUTE fromNode="BF_Sphere"       fromField="inputTrue"   toNode="TT_Sphere"       toField="set_boolean"/>
  <ROUTE fromNode="TT_Sphere"       fromField="triggerTime" toNode="ClipSphere"      toField="startTime"/>

  <!-- Stol -->
  <ROUTE fromNode="ChairTouchGeom"  fromField="isTouched"   toNode="AnyTouch_Chair"  toField="isTouched"/>
  <ROUTE fromNode="AnyTouch_Chair"  fromField="touched"     toNode="BF_Chair"        toField="set_boolean"/>
  <ROUTE fromNode="BF_Chair"        fromField="inputTrue"   toNode="TT_Chair"        toField="set_boolean"/>
  <ROUTE fromNode="TT_Chair"        fromField="triggerTime" toNode="ClipChair"       toField="startTime"/>

  <!-- ===================== -->
  <!-- ADDED FOR TASK 11 END -->
  <!-- ===================== -->

</Group>
